/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui_movie_rental;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import static javax.swing.JOptionPane.*;

/**
 *
 * @author ads
 */
public class add_new_movie extends javax.swing.JDialog {

    /**
     * Creates new form add_new_movie
     */
    private Connection con = null;
    
    public add_new_movie(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        for(int i=1940; i<=2019; i++)
        {
            yy.addItem(i+"");
        }
        yy.setSelectedIndex(yy.getItemCount()-1);
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_movie_name = new javax.swing.JLabel();
        label_movie_text = new javax.swing.JLabel();
        label_movie_rated = new javax.swing.JLabel();
        label_release_date = new javax.swing.JLabel();
        label_category = new javax.swing.JLabel();
        movie_name = new javax.swing.JTextField();
        movie_length = new javax.swing.JTextField();
        movie_rated = new javax.swing.JTextField();
        add_movie = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        dd = new javax.swing.JComboBox<>();
        mm = new javax.swing.JComboBox<>();
        yy = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        movie_category = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add A New Movie");
        setIconImage(null);
        setResizable(false);

        label_movie_name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        label_movie_name.setText("Movie Name : ");

        label_movie_text.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        label_movie_text.setText("Movie Length : ");
        label_movie_text.setToolTipText("");

        label_movie_rated.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        label_movie_rated.setText("Rated : ");

        label_release_date.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        label_release_date.setText("Date Realesed : ");

        label_category.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        label_category.setText("Category : ");

        movie_length.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                movie_lengthKeyTyped(evt);
            }
        });

        add_movie.setBackground(new java.awt.Color(0, 204, 0));
        add_movie.setForeground(new java.awt.Color(255, 255, 255));
        add_movie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_movie_rental/icons/add.png"))); // NOI18N
        add_movie.setMnemonic('A');
        add_movie.setText("Add Movie");
        add_movie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_movieActionPerformed(evt);
            }
        });

        clear.setBackground(new java.awt.Color(153, 153, 255));
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_movie_rental/icons/clear.png"))); // NOI18N
        clear.setMnemonic('C');
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("-->  In Minutes");

        dd.setBackground(new java.awt.Color(254, 254, 254));
        dd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        mm.setBackground(new java.awt.Color(254, 254, 254));
        mm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        yy.setBackground(new java.awt.Color(254, 254, 254));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("/");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("/");

        movie_category.setBackground(new java.awt.Color(254, 254, 254));
        movie_category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Action", "Comedy", "Drama", "Fantasy", "Sci-Fi ", "Horror", "Mystery", "Documentary", "Romance", "Thriller", "Western", "Others" }));
        movie_category.setSelectedIndex(-1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(label_movie_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label_movie_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label_movie_rated, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(label_release_date)
                    .addComponent(label_category))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(movie_name)
                        .addComponent(movie_rated, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                        .addComponent(movie_length))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3)
                        .addGap(8, 8, 8)
                        .addComponent(mm, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4)
                        .addGap(8, 8, 8)
                        .addComponent(yy, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(movie_category, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(add_movie)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_movie_name)
                    .addComponent(movie_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_movie_text)
                    .addComponent(movie_length, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_movie_rated)
                    .addComponent(movie_rated, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_release_date)
                    .addComponent(dd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_category)
                    .addComponent(movie_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_movie, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void movie_lengthKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_movie_lengthKeyTyped
        if(!(evt.getKeyChar()>='0' && evt.getKeyChar() <='9'))
            evt.consume();
    }//GEN-LAST:event_movie_lengthKeyTyped

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        movie_name.setText("");
        movie_length.setText("");
        movie_rated.setText("");
        dd.setSelectedIndex(0);
        mm.setSelectedIndex(0);
        yy.setSelectedIndex(yy.getItemCount()-1);
        movie_category.setSelectedIndex(-1);
    }//GEN-LAST:event_clearActionPerformed

    private void add_movieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_movieActionPerformed
        if(movie_name.getText().isEmpty() || movie_length.getText().isEmpty()
        || movie_rated.getText().isEmpty()|| movie_category.getSelectedIndex() == -1)
        {
           showMessageDialog(null,"All Input Fields Must Be Filled !","Empty Input Fields"
                           ,ERROR_MESSAGE,new ImageIcon("icons/warning.png"));
        }
        
        else{
              
        try {
            con = conn_db.getCon();
            PreparedStatement prep = con.prepareStatement("insert into MoviesTable"
                                                        + " values(?,?,?,?,?,?,?,?)");
            
                              prep.setString(1,movie_name.getText());
                              prep.setInt(2,Integer.parseInt(movie_length.getText()));
                              prep.setString(3,movie_rated.getText());
                              prep.setString(4,dd.getSelectedItem()+ "/"
                                             + mm.getSelectedItem()+"/"
                                             + yy.getSelectedItem());
                              prep.setString(5,"none");
                              prep.setString(6,"none");
                              prep.setString(7,"none");
                              prep.setString(8,movie_category.getSelectedItem()+"");
                              
                              prep.executeUpdate();
                              
                showMessageDialog(null,"Movie Is Added Successfully","Movie Added",
                                  INFORMATION_MESSAGE,new ImageIcon("icons/success.png"));  
                
                
        } catch (SQLException ex) {
            showMessageDialog(null,"This Movie Is Already Exists !!","Already Exists",
                              ERROR_MESSAGE,new ImageIcon("icons/fail.png"));
        } catch (Exception ex) {
            Logger.getLogger(add_new_movie.class.getName()).log(Level.SEVERE, null, ex);
        }
        }                                       
       
    }//GEN-LAST:event_add_movieActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(add_new_movie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(add_new_movie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(add_new_movie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(add_new_movie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                add_new_movie dialog = new add_new_movie(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_movie;
    private javax.swing.JButton clear;
    private javax.swing.JComboBox<String> dd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel label_category;
    private javax.swing.JLabel label_movie_name;
    private javax.swing.JLabel label_movie_rated;
    private javax.swing.JLabel label_movie_text;
    private javax.swing.JLabel label_release_date;
    private javax.swing.JComboBox<String> mm;
    private javax.swing.JComboBox<String> movie_category;
    private javax.swing.JTextField movie_length;
    private javax.swing.JTextField movie_name;
    private javax.swing.JTextField movie_rated;
    private javax.swing.JComboBox<String> yy;
    // End of variables declaration//GEN-END:variables
}
