/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui_movie_rental;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import static javax.swing.JOptionPane.*;

/**
 *
 * @author ads
 */
public class rent_movie extends javax.swing.JDialog {

    /**
     * Creates new form rent_movie
     */
    private Connection con = null;
    public rent_movie(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public boolean isValidDate()
    {
        
        try {
            SimpleDateFormat sdformat = new SimpleDateFormat("dd/MM/yyyy");
            String s1 =  dd_rent.getSelectedItem() + "/" + mm_rent.getSelectedItem()+"/"
                    + yy_rent.getSelectedItem();
            String s2 =  dd_return.getSelectedItem() + "/" + mm_return.getSelectedItem()+"/"
                    + yy_return.getSelectedItem();
            
            java.util.Date rent_date = sdformat.parse(s1);
            java.util.Date return_date = sdformat.parse(s2);
            
            if(return_date.before(rent_date))
                return false;
   
            
        } catch (ParseException ex) {
            Logger.getLogger(rent_movie.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return true;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_renter = new javax.swing.JLabel();
        renter_name = new javax.swing.JTextField();
        label_rented_movie = new javax.swing.JLabel();
        label_rental_date = new javax.swing.JLabel();
        label_return_date = new javax.swing.JLabel();
        movie_name = new javax.swing.JTextField();
        rent_movie = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        dd_rent = new javax.swing.JComboBox<>();
        mm_rent = new javax.swing.JComboBox<>();
        yy_rent = new javax.swing.JComboBox<>();
        dd_return = new javax.swing.JComboBox<>();
        mm_return = new javax.swing.JComboBox<>();
        yy_return = new javax.swing.JComboBox<>();
        l1 = new javax.swing.JLabel();
        l2 = new javax.swing.JLabel();
        l3 = new javax.swing.JLabel();
        l4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Rent A Movie");
        setResizable(false);

        label_renter.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        label_renter.setText("Enter Renter Name : ");

        label_rented_movie.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        label_rented_movie.setText("Enter Rented Movie Name : ");

        label_rental_date.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        label_rental_date.setText("Enter Rental Date : ");

        label_return_date.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        label_return_date.setText("Enter Return Date : ");

        movie_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movie_nameActionPerformed(evt);
            }
        });

        rent_movie.setBackground(new java.awt.Color(255, 102, 0));
        rent_movie.setForeground(new java.awt.Color(255, 255, 255));
        rent_movie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_movie_rental/icons/rent.png"))); // NOI18N
        rent_movie.setMnemonic('R');
        rent_movie.setText("Rent Movie");
        rent_movie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rent_movieActionPerformed(evt);
            }
        });

        clear.setBackground(new java.awt.Color(153, 153, 255));
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_movie_rental/icons/clear.png"))); // NOI18N
        clear.setMnemonic('C');
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        dd_rent.setBackground(new java.awt.Color(254, 254, 254));
        dd_rent.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        mm_rent.setBackground(new java.awt.Color(254, 254, 254));
        mm_rent.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        yy_rent.setBackground(new java.awt.Color(254, 254, 254));
        yy_rent.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2021", "2022", "2023", "2024", "2025" }));

        dd_return.setBackground(new java.awt.Color(254, 254, 254));
        dd_return.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        mm_return.setBackground(new java.awt.Color(254, 254, 254));
        mm_return.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        yy_return.setBackground(new java.awt.Color(254, 254, 254));
        yy_return.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2021", "2022", "2023", "2024", "2025" }));

        l1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        l1.setText("/");

        l2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        l2.setText("/");

        l3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        l3.setText("/");

        l4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        l4.setText("/");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_return_date)
                            .addComponent(label_rental_date))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dd_rent, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(mm_rent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dd_return, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(mm_return, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(l2)
                                .addGap(8, 8, 8)
                                .addComponent(yy_rent, 0, 80, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(l3)
                                .addGap(8, 8, 8)
                                .addComponent(yy_return, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label_renter)
                        .addGap(18, 18, 18)
                        .addComponent(renter_name, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(rent_movie)
                        .addGap(18, 18, 18)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label_rented_movie)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l1)
                            .addComponent(l4)
                            .addComponent(movie_name, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(34, 75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_renter)
                    .addComponent(renter_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_rented_movie)
                    .addComponent(movie_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_rental_date)
                    .addComponent(dd_rent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mm_rent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yy_rent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l1)
                    .addComponent(l2))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_return_date)
                    .addComponent(dd_return, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mm_return, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yy_return, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l4)
                    .addComponent(l3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rent_movie, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void movie_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movie_nameActionPerformed
    
    }//GEN-LAST:event_movie_nameActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        renter_name.setText("");
        movie_name.setText("");
        dd_rent.setSelectedIndex(0);
        mm_rent.setSelectedIndex(0);
        yy_rent.setSelectedIndex(0);
        dd_return.setSelectedIndex(0);
        mm_return.setSelectedIndex(0);
        yy_return.setSelectedIndex(0);
        
    }//GEN-LAST:event_clearActionPerformed

    private void rent_movieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rent_movieActionPerformed
             
        
      if(renter_name.getText().isEmpty() || movie_name.getText().isEmpty())
          
      {      
             showMessageDialog(null,"All Input Fields Must Be Filled !","Empty Input Fields",
                               ERROR_MESSAGE,new ImageIcon("icons/warning.png"));
      }
      

      else
      {
         
        if(isValidDate())  
        { 
            
         try{
            con = conn_db.getCon();
            PreparedStatement  prep =
            con.prepareStatement("update MoviesTable set"
                               + " Rented_To=?" + " , Date_Of_Rental=?" + " , Date_Of_Return=?"
                               + " where Movie_Name=?");
           
                 prep.setString(1,renter_name.getText());
                 prep.setString(2,dd_rent.getSelectedItem() + "/" + mm_rent.getSelectedItem() + "/" +
                                  yy_rent.getSelectedItem());
                
                 prep.setString(3,dd_return.getSelectedItem() + "/" + mm_return.getSelectedItem() + "/" +
                                  yy_return.getSelectedItem());
                
                 prep.setString(4,movie_name.getText());
                
            int x = prep.executeUpdate();
            
            if(x != 0)
            {
                showMessageDialog(null,"Movie Is Rented Successfully","Movie Rented",
                                 PLAIN_MESSAGE,new ImageIcon("icons/success.png"));
            }

            else
            {
                showMessageDialog(null,"Movie Is Not Found In The DataBase","Moivie Not Found",
                                 ERROR_MESSAGE,new ImageIcon("icons/fail.png"));
            }
                  
        } catch (SQLException ex) {
            Logger.getLogger(rent_movie.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(rent_movie.class.getName()).log(Level.SEVERE, null, ex);
        }
        } 
        
        else
        {
            showMessageDialog(null,"Return Date Is Before Rent Date !!!","Invalid Dates",
                              ERROR_MESSAGE,new ImageIcon("icons/wrong_dates.png"));
        }
      }
    }//GEN-LAST:event_rent_movieActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rent_movie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rent_movie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rent_movie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rent_movie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                rent_movie dialog = new rent_movie(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JComboBox<String> dd_rent;
    private javax.swing.JComboBox<String> dd_return;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l3;
    private javax.swing.JLabel l4;
    private javax.swing.JLabel label_rental_date;
    private javax.swing.JLabel label_rented_movie;
    private javax.swing.JLabel label_renter;
    private javax.swing.JLabel label_return_date;
    private javax.swing.JComboBox<String> mm_rent;
    private javax.swing.JComboBox<String> mm_return;
    private javax.swing.JTextField movie_name;
    private javax.swing.JButton rent_movie;
    private javax.swing.JTextField renter_name;
    private javax.swing.JComboBox<String> yy_rent;
    private javax.swing.JComboBox<String> yy_return;
    // End of variables declaration//GEN-END:variables
}
